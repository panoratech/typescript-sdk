/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingAccountsCreate } from "../funcs/accountingAccountsCreate.js";
import { accountingAccountsList } from "../funcs/accountingAccountsList.js";
import { accountingAccountsRetrieve } from "../funcs/accountingAccountsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class PanoraAccounts extends ClientSDK {
  /**
   * List  Accounts
   */
  async list(
    request: operations.ListAccountingAccountsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListAccountingAccountsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(accountingAccountsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Accounts
   *
   * @remarks
   * Create accounts in any supported Accounting software
   */
  async create(
    request: operations.CreateAccountingAccountRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedAccountingAccountOutput> {
    return unwrapAsync(accountingAccountsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Accounts
   *
   * @remarks
   * Retrieve Accounts from any connected Accounting software
   */
  async retrieve(
    request: operations.RetrieveAccountingAccountRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedAccountingAccountOutput> {
    return unwrapAsync(accountingAccountsRetrieve(
      this,
      request,
      options,
    ));
  }
}

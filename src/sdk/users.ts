/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ticketingUsersList } from "../funcs/ticketingUsersList.js";
import { ticketingUsersRetrieve } from "../funcs/ticketingUsersRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Users extends ClientSDK {
  /**
   * List Users
   */
  async list(
    request: operations.ListTicketingUsersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListTicketingUsersResponse, { cursor: string }>
  > {
    return unwrapResultIterator(ticketingUsersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve User
   *
   * @remarks
   * Retrieve a User from any connected Ticketing software
   */
  async retrieve(
    request: operations.RetrieveTicketingUserRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedTicketingUserOutput> {
    return unwrapAsync(ticketingUsersRetrieve(
      this,
      request,
      options,
    ));
  }
}

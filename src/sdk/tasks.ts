/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { crmTasksCreate } from "../funcs/crmTasksCreate.js";
import { crmTasksList } from "../funcs/crmTasksList.js";
import { crmTasksRetrieve } from "../funcs/crmTasksRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Tasks extends ClientSDK {
  /**
   * List Tasks
   */
  async list(
    request: operations.ListCrmTaskRequest,
    options?: RequestOptions,
  ): Promise<PageIterator<operations.ListCrmTaskResponse, { cursor: string }>> {
    return unwrapResultIterator(crmTasksList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Tasks
   *
   * @remarks
   * Create Tasks in any supported Crm software
   */
  async create(
    request: operations.CreateCrmTaskRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedCrmTaskOutput> {
    return unwrapAsync(crmTasksCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Tasks
   *
   * @remarks
   * Retrieve Tasks from any connected Crm software
   */
  async retrieve(
    request: operations.RetrieveCrmTaskRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedCrmTaskOutput> {
    return unwrapAsync(crmTasksRetrieve(
      this,
      request,
      options,
    ));
  }
}

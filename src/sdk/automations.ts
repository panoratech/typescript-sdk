/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { marketingautomationAutomationsCreate } from "../funcs/marketingautomationAutomationsCreate.js";
import { marketingautomationAutomationsList } from "../funcs/marketingautomationAutomationsList.js";
import { marketingautomationAutomationsRetrieve } from "../funcs/marketingautomationAutomationsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Automations extends ClientSDK {
  /**
   * List Automations
   */
  async list(
    request: operations.ListMarketingautomationAutomationsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ListMarketingautomationAutomationsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(marketingautomationAutomationsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Automation
   *
   * @remarks
   * Create a automation in any supported Marketingautomation software
   */
  async create(
    request: operations.CreateMarketingautomationAutomationRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedMarketingautomationAutomationOutput> {
    return unwrapAsync(marketingautomationAutomationsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Automation
   *
   * @remarks
   * Retrieve an Automation from any connected Marketingautomation software
   */
  async retrieve(
    request: operations.RetrieveMarketingautomationAutomationRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedMarketingautomationAutomationOutput> {
    return unwrapAsync(marketingautomationAutomationsRetrieve(
      this,
      request,
      options,
    ));
  }
}

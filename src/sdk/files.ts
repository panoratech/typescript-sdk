/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { filestorageFilesCreate } from "../funcs/filestorageFilesCreate.js";
import { filestorageFilesList } from "../funcs/filestorageFilesList.js";
import { filestorageFilesRetrieve } from "../funcs/filestorageFilesRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Files extends ClientSDK {
  /**
   * List  Files
   */
  async list(
    request: operations.ListFilestorageFileRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListFilestorageFileResponse, { cursor: string }>
  > {
    return unwrapResultIterator(filestorageFilesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Files
   *
   * @remarks
   * Create Files in any supported Filestorage software
   */
  async create(
    request: operations.CreateFilestorageFileRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedFilestorageFileOutput> {
    return unwrapAsync(filestorageFilesCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Files
   *
   * @remarks
   * Retrieve Files from any connected Filestorage software
   */
  async retrieve(
    request: operations.RetrieveFilestorageFileRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedFilestorageFileOutput> {
    return unwrapAsync(filestorageFilesRetrieve(
      this,
      request,
      options,
    ));
  }
}

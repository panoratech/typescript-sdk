/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { crmDealsCreate } from "../funcs/crmDealsCreate.js";
import { crmDealsList } from "../funcs/crmDealsList.js";
import { crmDealsRetrieve } from "../funcs/crmDealsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Deals extends ClientSDK {
  /**
   * List Deals
   */
  async list(
    request: operations.ListCrmDealsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListCrmDealsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(crmDealsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Deals
   *
   * @remarks
   * Create Deals in any supported Crm software
   */
  async create(
    request: operations.CreateCrmDealRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedCrmDealOutput> {
    return unwrapAsync(crmDealsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Deals
   *
   * @remarks
   * Retrieve Deals from any connected Crm software
   */
  async retrieve(
    request: operations.RetrieveCrmDealRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedCrmDealOutput> {
    return unwrapAsync(crmDealsRetrieve(
      this,
      request,
      options,
    ));
  }
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ecommerceOrdersCreate } from "../funcs/ecommerceOrdersCreate.js";
import { ecommerceOrdersList } from "../funcs/ecommerceOrdersList.js";
import { ecommerceOrdersRetrieve } from "../funcs/ecommerceOrdersRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Orders extends ClientSDK {
  /**
   * List Orders
   */
  async list(
    request: operations.ListEcommerceOrdersRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListEcommerceOrdersResponse, { cursor: string }>
  > {
    return unwrapResultIterator(ecommerceOrdersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Orders
   *
   * @remarks
   * Create Orders in any supported Ecommerce software
   */
  async create(
    request: operations.CreateEcommerceOrderRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedEcommerceOrderOutput> {
    return unwrapAsync(ecommerceOrdersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Orders
   *
   * @remarks
   * Retrieve orders from any connected Ats software
   */
  async retrieve(
    request: operations.RetrieveEcommerceOrderRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedEcommerceOrderOutput> {
    return unwrapAsync(ecommerceOrdersRetrieve(
      this,
      request,
      options,
    ));
  }
}

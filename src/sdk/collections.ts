/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ticketingCollectionsList } from "../funcs/ticketingCollectionsList.js";
import { ticketingCollectionsRetrieve } from "../funcs/ticketingCollectionsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Collections extends ClientSDK {
  /**
   * List Collections
   */
  async list(
    request: operations.ListTicketingCollectionsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<
      operations.ListTicketingCollectionsResponse,
      { cursor: string }
    >
  > {
    return unwrapResultIterator(ticketingCollectionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Collections
   *
   * @remarks
   * Retrieve Collections from any connected Ticketing software
   */
  async retrieve(
    request: operations.RetrieveCollectionRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedTicketingCollectionOutput> {
    return unwrapAsync(ticketingCollectionsRetrieve(
      this,
      request,
      options,
    ));
  }
}

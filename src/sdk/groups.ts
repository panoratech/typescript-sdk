/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { filestorageGroupsList } from "../funcs/filestorageGroupsList.js";
import { filestorageGroupsRetrieve } from "../funcs/filestorageGroupsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class Groups extends ClientSDK {
  /**
   * List  Groups
   */
  async list(
    request: operations.ListFilestorageGroupRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListFilestorageGroupResponse, { cursor: string }>
  > {
    return unwrapResultIterator(filestorageGroupsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Groups
   *
   * @remarks
   * Retrieve Groups from any connected Filestorage software
   */
  async retrieve(
    request: operations.RetrieveFilestorageGroupRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedFilestorageGroupOutput> {
    return unwrapAsync(filestorageGroupsRetrieve(
      this,
      request,
      options,
    ));
  }
}

/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountingContactsCreate } from "../funcs/accountingContactsCreate.js";
import { accountingContactsList } from "../funcs/accountingContactsList.js";
import { accountingContactsRetrieve } from "../funcs/accountingContactsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";
import { PageIterator, unwrapResultIterator } from "../types/operations.js";

export class PanoraAccountingContacts extends ClientSDK {
  /**
   * List  Contacts
   */
  async list(
    request: operations.ListAccountingContactsRequest,
    options?: RequestOptions,
  ): Promise<
    PageIterator<operations.ListAccountingContactsResponse, { cursor: string }>
  > {
    return unwrapResultIterator(accountingContactsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Contacts
   *
   * @remarks
   * Create contacts in any supported Accounting software
   */
  async create(
    request: operations.CreateAccountingContactRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedAccountingContactOutput> {
    return unwrapAsync(accountingContactsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve Contacts
   *
   * @remarks
   * Retrieve Contacts from any connected Accounting software
   */
  async retrieve(
    request: operations.RetrieveAccountingContactRequest,
    options?: RequestOptions,
  ): Promise<components.UnifiedAccountingContactOutput> {
    return unwrapAsync(accountingContactsRetrieve(
      this,
      request,
      options,
    ));
  }
}
